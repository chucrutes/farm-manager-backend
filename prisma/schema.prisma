// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id
  name           String
  username       String?  @unique
  email          String   @unique
  password       String
  phone          String?
  email_verified Boolean?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@map("users")
}

enum Types {
  INVESTMENT_EXPENSE
  CATTLE_SALE
  BUY_CATTLE
  MEDICINE
  PESTICIDE
  FEED
  STAFF
  INVESTMENT
}

enum Categories {
  EXPENSE
  PROFIT
  ASSET
}

model Farm {
  id         String   @id
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Entry      Entry[]

  @@map("farms")
}

enum FarmPlanStatuses {
  ACTIVE
  INACTIVE
}

enum FarmPlans {
  FREE
  BASIC
  PREMIUM
}

model FarmPlan {
  farm_id    String
  status     FarmPlanStatuses
  plan       FarmPlanStatuses
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt

  @@id([farm_id])
  @@map("farm_plans")
}

enum Roles {
  OWNER
  WORKER
}

model FarmMembers {
  user_id    String
  farm_id    String
  role       Roles
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([user_id, farm_id])
  @@map("farm_members")
}

model Entry {
  id          String     @id
  farm        Farm       @relation(fields: [farm_id], references: [id], onDelete: Cascade)
  farm_id     String
  description String
  price       Float
  quantity    Float
  total       Float
  type        Types
  category    Categories
  deleted     Boolean
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  @@map("entries")
}
